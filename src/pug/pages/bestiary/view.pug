mixin bestiary-view(spine)
  header.bestiary--view
    .bio
      -
        const bio = spine.bio.fields
          .reduce((memo, val) => ((memo[val.name] = structuredClone(val)), memo), {});
      .bio__name
        +chimera-span(bio.character_name)
      .bio__meta
        span(data-i18n='lv') Lv
        +chimera-hidden(bio.rank.name)
        +chimera-span(bio.level)
        +chimera-span(bio.rank)
        +fabula-diamond
        +chimera-span(bio.species)
      .bio__description
        +chimera-span(bio.description)
      .bio__traits
        span(data-i18n='typical_traits') Typical Traits
        +chimera-span(bio.traits)

    .statistics
      .attributes
        each field in spine.attributes.view
          +chimera-value(field)
      .points(style='grid-column: span 2')
        - let { hp, crisis, mp, initiative } = spine.points;
        each field in Object.values(spine.points)
          +chimera-value(field)
          if field.name === 'hp' || field.name === 'mp'
            span /
            span(name=`attr_${field.name}_max`)
      .defenses
        each field in spine.defenses.view
          +chimera-value(field)
      .affinities(style='grid-column: span 3')
        each field in spine.affinities.fields
          +chimera-value(field)

    //- .bio
      .bio__level-rank-species
        p
          span(data-i18n=`Lv`) Lv
          +chimera-span(vbio.level)
          +chimera-span(vbio.rank)
          span.fabula-diamond ⬥
          +chimera-span(vbio.species)
      .bio__description
        //- +chimera-span(description)
        span(name=`attr_description`)
      .bio__traits
        span(data-i18n='traits') Traits
        //- +chimera-value(traits)
        span(name=`attr_traits`)

    //- .statistics
      .attributes
        each field in attributes.view
          .attribute(class=`attribute--${field.name}`)
            +chimera-value(field)

      .points
        .hp--label
          span(data-i18n='hp') HP
        .hp
          +chimera-span(points.hp)
          span.fabula-diamond ⬥
          +chimera-span(points.crisis)
        .mp--label
          span(data-i18n=`mp`) MP
        .mp
          +chimera-span(points.mp)
        .initiative
          +chimera-value(points.initiative)

      .defenses
        - const vdefense = defenses.view.reduce((memo, val) =>  (memo[val.name] = structuredClone(val), memo), {})
        .defense.defense--def
          +chimera-value(vdefense.defense)
        .defense.defense--mdef
          +chimera-value(vdefense.magic_defense)

      .affinities
        each dtype in damageTypeOptions
          .affinity(class=`affinity--${dtype.name}`)
            input(name=`attr_${dtype.name}`, type='hidden')
            +chimera-icon({ icon: dtype.name, title: dtype.text })
            +chimera-value(dtype)
            //- span.affinity__label(data-i18n=dtype.name)= dtype.text
            //- span(name=`attr_${dtype.name}`)
