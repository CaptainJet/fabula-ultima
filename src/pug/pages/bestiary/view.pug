mixin bestiary-view(spine)
  header.bestiary--view
    .bio
      -
        const bio = spine.bio.fields
          .reduce((memo, val) => ((memo[val.name] = structuredClone(val)), memo), {});
      .bio__name
        +chimera-span(bio.character_name)
      .bio__meta
        label(data-i18n='lv') Lv
        +chimera-hidden(bio.rank.name)
        +chimera-span(bio.level)
        +chimera-span(bio.rank)
        +fabula-diamond
        +chimera-span(bio.species)
      .bio__description
        +chimera-span(bio.description)
      .bio__traits
        label(data-i18n='typical_traits') Typical Traits
        +chimera-span(bio.traits)

    .statistics
      .attributes
        each field in spine.attributes.view
          +chimera-value(field).attribute

      .points
        -
          const points = spine.points.fields
            .reduce((memo, val) => ((memo[val.name] = structuredClone(val)), memo), {});

        .points__label
          label(data-i18n='hp') HP
        .points__hp
          +chimera-span(points.hp)
          +fabula-diamond
          +chimera-span(points.hp_crisis)

        .points__label
          label(data-i18n='mp') MP
        .points__mp
          +chimera-span(points.mp)

        .points__initiative
          label(data-i18n='init') Init.
          +chimera-span(points.initiative)

      .defenses
        each field in spine.defenses.hidden
          +chimera-hidden(field)
        each field in spine.defenses.view
          +chimera-value(field)

      .affinities
        each field in spine.affinities.fields
          - console.log(field);
          .affinity--cell(class=`affinity--${field.name}`)
            +chimera-hidden(field.name)
            +chimera-icon({ icon: field.name, title: field.text })
            +chimera-value(field)
            //- span.affinity__label(data-i18n=field.name)= field.text
            //- span(name=`attr_${field.name}`)
