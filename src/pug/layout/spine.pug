-
  const spine = {
    sheets: ["character", "bestiary", "gm"],
    character: {},
    bestiary: {},
    gm: {},

    shared: {},
  };

include constants.spine.pug
include translations.spine.pug

include shared/affinities.spine.pug
include shared/controllers.spine.pug
include shared/modes.spine.pug
include shared/rolls.spine.pug
include shared/statuses.spine.pug
include shared/settings.spine.pug

include bestiary/actions.spine.pug
include bestiary/affinities.spine.pug
include bestiary/attributes.spine.pug
include bestiary/bio.spine.pug
include bestiary/defenses.spine.pug
include bestiary/equipment.spine.pug
include bestiary/nav.spine.pug
include bestiary/other.spine.pug
include bestiary/points.spine.pug

include character/attributes.spine.pug
include character/equipment/equipment.spine.pug
include character/equipment/weapons.spine.pug
include character/bonds.spine.pug
include character/magic.spine.pug
include character/classes.spine.pug
include character/inventory.spine.pug
include character/defenses.spine.pug
include character/nav.spine.pug
include character/journal.spine.pug
include character/points.spine.pug
include character/traits.spine.pug

include gm/gm.spine.pug

-
  spine.character.affinities = {
    ...structuredClone(spine.shared.affinities),
    ...spine.character.affinities };
  spine.bestiary.affinities = {
    ...structuredClone(spine.shared.affinities),
    ...spine.bestiary.affinities };

  spine.character.controllers = {
    ...structuredClone(spine.shared.controllers),
    ...spine.character.controllers };
  spine.bestiary.controllers = {
    ...structuredClone(spine.shared.controllers),
    ...spine.bestiary.controllers };

  spine.character.statuses = {
    ...structuredClone(spine.shared.statuses),
    ...spine.character.statuses };
  spine.bestiary.statuses = {
    ...structuredClone(spine.shared.statuses),
    ...spine.bestiary.statuses };

  spine.character.settings = {
    ...structuredClone(spine.shared.settings),
    ...spine.character.settings };
  spine.bestiary.settings = {
    ...structuredClone(spine.shared.settings),
    ...spine.bestiary.settings };

  spine.character.rolls = {
    ...structuredClone(spine.shared.rolls),
    ...spine.character.rolls };
  spine.bestiary.rolls = {
    ...structuredClone(spine.shared.rolls),
    ...spine.bestiary.rolls };
