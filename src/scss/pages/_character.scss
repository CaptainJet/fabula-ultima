@use '../common/vars' as *;
@use '../common/vars' as mixins;

@use 'character/traits';
@use 'character/bonds';
@use 'character/statistics';
@use 'character/attributes';
@use 'character/points';
@use 'character/equipment/equipment';
@use 'character/magic';
@use 'character/classes';
@use 'shared/shared';

.fabula-ultima {
  .character {
    $this: '.character';

    // navigation
    $pages: 'stats', 'bonds', 'classes', 'equipment', 'magic', 'journal', 'settings';
    @each $page in $pages {
      &__#{$page} {
        display: none;
        grid-column: 1/-1;
      }

      input[name*='nav'] {
        &[value='#{$page}'] {
          ~ * #{$this}__#{$page} {
            display: grid;
          }
        }
      }
    }

    &--view {
      min-width: $breakpoint-xs;
      margin: 8px;
      max-width: 500px;
      background-color: var(--suface-container-lowest);

      box-shadow: var(--box-shadow-light);
      border-radius: 4px;

      display: flex;
      flex-direction: column;
      gap: 4px;

      * ~ .repcontrol {
        display: none;
      }
    }

    &--edit {
      display: flex;
      flex-direction: column;
      gap: 4px;

      display: grid;
      grid-template-columns: 3fr 1fr;
      grid-template-rows: 1fr auto;
      gap: 8px;

      margin: 8px;
      padding: 8px;

      background-color: var(--character-edit-background);

      ~ div,
      > div {
        height: min-content;
        align-self: flex-end;
      }

      @media (min-width: $breakpoint-sm) {
        .attributes--edit {
          grid-row: span 2;
        }
        .bonds--edit {
          grid-column: 1/-1;
        }
      }
    }
  }
}
