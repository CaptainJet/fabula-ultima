@use '../common/vars' as *;
@use '../common/vars' as mixins;

.bestiary {
  $this: '.bestiary';

  &--view {
    margin: 8px;
    max-width: 500px;
    background-color: var(--suface-container-lowest);

    box-shadow: var(--box-shadow-light);
    border-radius: 4px;

    display: flex;
    flex-direction: column;
    gap: 4px;

    .bio {
      display: grid;
      grid-template-columns: 1fr auto;
      gap: 4px;

      &__name {
        background-image: var(--fabula-gradient-primary);
        color: var(--color-on-dark);
        padding-left: 16px;
        padding-right: 16px;
        span {
          display: flex;
          align-items: center;
          height: 100%;
          @include mixins.text-xxl-500-fabula;
        }
      }

      &__meta {
        display: flex;
        gap: 4px;

        padding: 4px 16px;
        border-left: 2px solid var(--color-fabula2);
        border-bottom: 2px solid var(--color-fabula2);
        border-image: var(--fabula-gradient-secondary);

        span {
          @include mixins.text-xl-500-fabula;
        }

        input[value='soldier'] {
          ~ span[name*='rank'] {
            font-size: 0;
          }
        }
      }

      &__description {
        grid-column: span 2;
        border-bottom: 1px solid var(--color-fabula2);
        border-image: var(--fabula-gradient-primary-border);
        padding: 4px 16px;
        @include mixins.text-base-400;
      }
      &__traits {
        grid-column: span 2;
        padding: 4px 16px;
        @include mixins.text-base-400;

        span:first-of-type {
          font-weight: 700;
          &::after {
            content: ':';
          }
        }
      }
    }

    .statistics {
      display: grid;
      grid-template-columns: repeat(4, 1fr);
      gap: 4px;

      .attributes {
        grid-column: span 2;

        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 4px;

        align-items: center;
        justify-content: space-between;

        height: min-content;

        text-align: center;

        border: 1px solid var(--color-fabula0);
        border-left: none;
        border-image: var(--fabula-gradient-dark-border);

        margin: 2px 2px 2px 0px;

        .chimera-value {
          @include mixins.text-lg-700-fabula;

          @each $attr in 1, 2, 3, 4 {
            &:nth-of-type(#{$attr}) {
              background-color: color-mix(in srgb, white #{$attr * 10%}, var(--color-fabula2));
            }
          }
        }
      }
    }
  }

  &--edit {
    @import 'bestiary/actions';
    @import 'bestiary/equipment';
    @import 'bestiary/affinity';
    @import 'bestiary/attributes';
    @import 'bestiary/defenses';
    @import 'bestiary/extras';
    @import 'bestiary/bio';
    @import 'bestiary/other';

    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 8px;

    padding: 8px;
    background-color: var(--background);

    > div {
      height: min-content;
    }

    .bio {
      grid-column: 1 / span 3;
    }
    .attributes {
      grid-column-start: 1;
    }
    .attributes__distribution {
      grid-column: span 3;
    }
    .affinities {
      grid-row: 3 / span 2;
    }
    .affinities__skillcost {
      grid-column: span 2;
    }

    .defenses {
      grid-column: 2;
      align-self: flex-end;
    }
    .extras {
      grid-column: 3;
      align-self: flex-end;
    }
    .extra--checkboxes {
      grid-column: 4;
      align-self: flex-end;
    }

    .shield,
    .weapons {
      grid-column: 3 / span 2;
    }

    .armor,
    .attacks {
      grid-column: 1 / span 2;
    }

    .spells {
      grid-column: 1/-1;
    }
  }
}
